# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Publish

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SECRET_API_KEY: ${{ secrets.DEPLOY_SERVER_DEPLOY_SH }}
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Put the Environments
      run: |
        mkdir ./src/main/resources/
        echo "${{ secrets.ENV }}" >> ./src/main/resources/config.properties

    - name: Build with Gradle
      run: |
        gradle wrap
        ./gradlew wrapper
        ./gradlew clean build

    - name: Copy WAR to Deployment Server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DEPLOY_SERVER_HOST }}
        username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        source: build/libs/webapp.war
        target: ${{ secrets.DEPLOY_SERVER_WAR_PATH }}
        
    - name: SSH into Deployment Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_SERVER_HOST }}
        username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        script: |
          $DEPLOY_SERVER_DEPLOY_SH
